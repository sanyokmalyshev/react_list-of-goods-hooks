{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortName","setSortType","reverse","setReversed","visible","goods","sortType","isReversed","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","className","type","onClick","ALPABET","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAWE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA+BH,oBAAS,GAAxC,mBAAOI,EAAP,KAAgBC,EAAhB,KA0BMC,EAxBoB,SACxBC,EADwB,GAGpB,IADFC,EACC,EADDA,SAAUC,EACT,EADSA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,IAAK,WACH,OAAOI,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITN,GACFC,EAAaN,UAGRM,EAGOM,CACdlB,EACA,CACEU,SAAUN,EACVO,WAAYL,IAIhB,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,aAAbf,GAA2B,YACxDiB,QAAS,WACPhB,EAAYN,EAASuB,UAJzB,iCAUA,wBACEF,KAAK,SACLD,UAAS,4BAAoC,WAAbf,GAAyB,YACzDiB,QAAS,WACPhB,EAAYN,EAASwB,SAJzB,4BAUA,wBACEH,KAAK,SACLD,UAAS,6BAAwBb,GAAW,YAC5Ce,QAAS,WACPd,GAAaD,IAJjB,qBAUe,SAAbF,GAAuBE,EAErB,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPhB,EAAYN,EAASI,MACrBI,GAAY,IALhB,mBAWA,MAGN,6BACGC,EAAQgB,KAAI,SAAAC,GAAI,OACf,oBACE,UAAQ,OADV,SAIGA,GAFIA,YClHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.03a13ccc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport const App: React.FC = () => {\n  const [sortName, setSortType] = useState(SortType.NONE);\n  const [reverse, setReversed] = useState(false);\n\n  const getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case 'alphabet':\n          return a.localeCompare(b);\n        case 'length':\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const visible = getReorderedGoods(\n    goodsFromServer,\n    {\n      sortType: sortName,\n      isReversed: reverse,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortName !== 'alphabet' && 'is-light'}`}\n          onClick={() => {\n            setSortType(SortType.ALPABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortName !== 'length' && 'is-light'}`}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reverse && 'is-light'}`}\n          onClick={() => {\n            setReversed(!reverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortName !== 'none' || reverse)\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n          : ''}\n      </div>\n\n      <ul>\n        {visible.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}